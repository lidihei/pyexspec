# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bfosc.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
try:
   from PyQt5 import QtCore, QtGui, QtWidgets
except:
   from PyQt6 import QtCore, QtGui, QtWidgets


class ExtractWindow(object):

    def __init__(self, instrument_name=None):
        '''
        The main window of extraction
        parameters:
        -------------
        instrument_name [stri] the name of telescope instrument, e.g. P200 DBPS
        '''
        self.instrument = '' if instrument_name is None else instrument_name

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1430, 566)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.toolButton = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton.setGeometry(QtCore.QRect(20, 20, 26, 22))
        self.toolButton.setObjectName("toolButton")
        self.lineEdit_wd = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_wd.setEnabled(True)
        self.lineEdit_wd.setGeometry(QtCore.QRect(60, 20, 261, 21))
        self.lineEdit_wd.setObjectName("lineEdit_wd")
        ###---- ihdu
        self.lineEdit_hdu = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_hdu.setPlaceholderText('hdu: 0')
        self.lineEdit_hdu.setEnabled(True)
        self.lineEdit_hdu.setGeometry(QtCore.QRect(390, 20, 100, 21))
        ###---- checkBox_rot90
        self.CheckBoxWidget = QtWidgets.QWidget(self.centralwidget)
        self.CheckBoxWidget.setGeometry(QtCore.QRect(390, 45, 100, 21))
        self.CheckBoxWidget.setObjectName("CheckBoxWidget")
        self.layoutCheckBox = QtWidgets.QVBoxLayout(self.CheckBoxWidget)
        self.layoutCheckBox.setContentsMargins(0, 0, 0, 0)
        self.checkBox_rot90 = QtWidgets.QCheckBox(self.CheckBoxWidget)
        self.checkBox_rot90.setObjectName("checkBox_rot90")
        self.layoutCheckBox.addWidget(self.checkBox_rot90)
        self.checkBox_rot90.setText("rot90(image)")
        ###---- trimx
        self.lineEdit_trimx_start = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_trimx_start.setPlaceholderText('trimx start:0')
        self.lineEdit_trimx_start.setEnabled(True)
        self.lineEdit_trimx_start.setGeometry(QtCore.QRect(500, 20, 100, 21))
        self.lineEdit_trimx_end = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_trimx_end.setPlaceholderText('trimx end:300')
        self.lineEdit_trimx_end.setEnabled(True)
        self.lineEdit_trimx_end.setGeometry(QtCore.QRect(600.5, 20, 100, 21))
        ###---- trimy
        self.lineEdit_trimy_start = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_trimy_start.setPlaceholderText('trimy start:0')
        self.lineEdit_trimy_start.setEnabled(True)
        self.lineEdit_trimy_start.setGeometry(QtCore.QRect(500, 45, 100, 21))
        self.lineEdit_trimy_end = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_trimy_end.setPlaceholderText('trimy end:300')
        self.lineEdit_trimy_end.setEnabled(True)
        self.lineEdit_trimy_end.setGeometry(QtCore.QRect(600.5, 45, 100, 21))
        ###----datatable
        self.tableWidget_files = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget_files.setGeometry(QtCore.QRect(10, 70, 571, 451))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tableWidget_files.setFont(font)
        try:
            self.tableWidget_files.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents) ###pyqt5
        except:
            self.tableWidget_files.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents) ###pyqt5
        self.tableWidget_files.setAlternatingRowColors(True)
        self.tableWidget_files.setObjectName("tableWidget_files")
        self.tableWidget_files.setColumnCount(0)
        self.tableWidget_files.setRowCount(0)
        self.tableWidget_files.horizontalHeader().setCascadingSectionResizes(True)
        ###----------- Button
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(580, 110, 134, 331))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_update_table = QtWidgets.QPushButton(self.layoutWidget)
        try:
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed) ###pyqt5
        except:
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed) ###pyqt6
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(8)
        sizePolicy.setHeightForWidth(self.pushButton_update_table.sizePolicy().hasHeightForWidth())
        self.pushButton_update_table.setSizePolicy(sizePolicy)
        self.pushButton_update_table.setObjectName("pushButton_update_table")
        self.verticalLayout.addWidget(self.pushButton_update_table)
        self.pushButton_proc_bias = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_proc_bias.setObjectName("pushButton_proc_bias")
        self.verticalLayout.addWidget(self.pushButton_proc_bias)
        self.pushButton_proc_flat = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_proc_flat.setObjectName("pushButton_proc_flat")
        self.verticalLayout.addWidget(self.pushButton_proc_flat)
        self.pushButton_clear_aperture = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_clear_aperture.setObjectName("pushButton_clear_aperture")
        self.verticalLayout.addWidget(self.pushButton_clear_aperture)
        self.pushButton_add_aperture = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_add_aperture.setObjectName("pushButton_add_aperture")
        self.verticalLayout.addWidget(self.pushButton_add_aperture)
        self.pushButton_del_aperture = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_del_aperture.setObjectName("pushButton_del_aperture")
        self.verticalLayout.addWidget(self.pushButton_del_aperture)
        self.pushButton_save_aperture = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_save_aperture.setObjectName("pushButton_save_aperture")
        self.verticalLayout.addWidget(self.pushButton_save_aperture)
        self.pushButton_proc_all = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_proc_all.setObjectName("pushButton_proc_all")
        self.verticalLayout.addWidget(self.pushButton_proc_all)
        self.checkBox_autowvcalib = QtWidgets.QCheckBox(self.layoutWidget)
        self.checkBox_autowvcalib.setObjectName("checkBox_autowvcalib")
        self.verticalLayout.addWidget(self.checkBox_autowvcalib)
        self.checkBox_autowvcalib.setText("auto wave calib")
        #### apperture
        #self.lineEdit_ap_sigma = QtWidgets.QLineEdit(self.centralwidget)
        #self.lineEdit_ap_sigma.setPlaceholderText('Aperture Ïƒ')
        #self.lineEdit_ap_sigma.setEnabled(True)
        #self.lineEdit_ap_sigma.setGeometry(QtCore.QRect(590, 425, 113, 21))
        self.lineEdit_ap_width = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_ap_width.setPlaceholderText('ap_width = int')
        self.lineEdit_ap_width.setEnabled(True)
        self.lineEdit_ap_width.setGeometry(QtCore.QRect(590, 446, 113, 21))
        self.lineEdit_Napw = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_Napw.setPlaceholderText('N*ap_width')
        self.lineEdit_Napw.setEnabled(True)
        self.lineEdit_Napw.setGeometry(QtCore.QRect(590, 467, 113, 21))
        self.lineEdit_Napw_bg = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_Napw_bg.setPlaceholderText('bg=N*ap_width')
        self.lineEdit_Napw_bg.setEnabled(True)
        self.lineEdit_Napw_bg.setGeometry(QtCore.QRect(590, 488, 113, 21))

        self.lineEdit_nap = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_nap.setEnabled(True)
        self.lineEdit_nap.setGeometry(QtCore.QRect(590, 510, 113, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_nap.setFont(font)
        self.lineEdit_nap.setObjectName("lineEdit_nap")
        self.lineEdit_lamp = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_lamp.setGeometry(QtCore.QRect(60, 45, 261, 21))
        self.lineEdit_lamp.setObjectName("lineEdit_lamp")
        self.toolButton_load_lamp = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton_load_lamp.setGeometry(QtCore.QRect(20, 45, 26, 22))
        self.toolButton_load_lamp.setObjectName("toolButton_load_lamp")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1430, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", f"{self.instrument} Pipeline"))
        self.toolButton.setText(_translate("MainWindow", "WD..."))
        self.pushButton_update_table.setText(_translate("MainWindow", "update table"))
        self.pushButton_proc_bias.setText(_translate("MainWindow", "process bias"))
        self.pushButton_proc_flat.setText(_translate("MainWindow", "process flat"))
        self.pushButton_clear_aperture.setText(_translate("MainWindow", "clear apertures"))
        self.pushButton_add_aperture.setText(_translate("MainWindow", "add aperture"))
        self.pushButton_del_aperture.setText(_translate("MainWindow", "del aperture"))
        self.pushButton_save_aperture.setText(_translate("MainWindow", "save apertures"))
        self.pushButton_proc_all.setText(_translate("MainWindow", "process all"))
        self.toolButton_load_lamp.setText(_translate("MainWindow", "ARC..."))
